# Використовуємо офіційний образ Jenkins
FROM jenkins/jenkins:lts-jdk17

# Встановлюємо Docker CLI, kubectl та Minikube
USER root
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    netcat-openbsd \
    git \
    maven \
    unzip

# Додаємо офіційний GPG ключ Docker
RUN mkdir -p /etc/apt/keyrings
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
RUN echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

# Встановлюємо Docker CLI
RUN apt-get update && apt-get install -y docker-ce-cli

# Встановлюємо kubectl
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
RUN install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# Встановлюємо Minikube
RUN curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
RUN install -o root -g root -m 0755 minikube-linux-amd64 /usr/local/bin/minikube

# *************************************************************************
# ВИПРАВЛЕНИЙ БЛОК ДЛЯ ДОДАВАННЯ КОРИСТУВАЧА JENKINS ДО ГРУПИ DOCKER З GID ХОСТА
# Замініть 999 на GID, який ви отримали з 'grep docker /etc/group' на хості (WSL2 VM)
#
# Створимо групу 'docker' з GID 999, якщо її ще немає, або якщо вона є з іншим GID.
# Потім додамо jenkins до цієї групи.
# Це має бути ЄДИНИЙ блок, який стосується груп/дозволів Docker socket.
# *************************************************************************
ARG DOCKER_GID=999
RUN groupadd -g ${DOCKER_GID} docker || true && usermod -aG docker jenkins

USER jenkins